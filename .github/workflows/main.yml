name: Build

on: [push, pull_request]

jobs:
  black:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python version
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install tox
      run: pip install tox

    - name: Black check
      run: tox -e black

  flake8:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python version
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install tox
      run: pip install tox

    - name: Flake8 check
      run: tox -e flake8

  typing:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python version
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install tox
      run: pip install tox

    - name: Mypy check
      run: tox -e typing

  coverage:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python version
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install tox
      run: pip install tox

    - name: Generate coverage report
      run: tox -e py

    - name: Upload coverage report
      run: bash <(curl -s https://codecov.io/bash)

  tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install tox
      run: pip install tox

    - name: Run tests
      run: tox -e py

  publish:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python version
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Publish to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
      run: |
        pip install --upgrade setuptools wheel twine
        python setup.py sdist bdist_wheel
        export TWINE_USERNAME=__token__
        export TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }}
        twine upload dist/*
